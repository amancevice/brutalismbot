#!/usr/bin/env ruby
require "dotenv/load"
require "brutalismbot/version"

VERSION   = ENV["BRUTALISMBOT_VERSION"] || %x(git describe --tags --always).strip
S3_BUCKET = "brutalismbot"
S3_PREFIX = "pkg/brutalismbot-#{VERSION}"

rum :"brutalismbot/brutalismbot" do
  tag VERSION

  env :AWS_ACCESS_KEY_ID
  env :AWS_DEFAULT_REGION
  env :AWS_SECRET_ACCESS_KEY
  env :RUNTIME                            => "ruby2.5"
  env :TF_VAR_release                     => tag
  env :TF_VAR_twitter_access_token        => ENV["TWITTER_ACCESS_TOKEN"]
  env :TF_VAR_twitter_access_token_secret => ENV["TWITTER_ACCESS_TOKEN_SECRET"]
  env :TF_VAR_twitter_consumer_key        => ENV["TWITTER_CONSUMER_KEY"]
  env :TF_VAR_twitter_consumer_secret     => ENV["TWITTER_CONSUMER_SECRET"]

  stage :build
  stage :dev  => :build
  stage :test => :dev
  stage :plan => :test

  artifact "pkg/function.zip" => :build
  artifact "pkg/layer.zip"    => :build

  desc "Apply infrastructure"
  run :apply => :plan

  default %W[pkg/function.zip pkg/layer.zip]
end

desc "List packages"
task :ls do
  sh "aws s3 ls --recursive s3://#{S3_BUCKET}/#{S3_PREFIX}"
end

desc "Push Lambda Layer package"
task :push => %w[pkg/function.zip pkg/layer.zip] do
  sh "aws s3 sync pkg s3://#{S3_BUCKET}/#{S3_PREFIX}"
end

desc "Publish Lambda Layer package"
task :publish do
  sh <<~EOS
    aws lambda publish-layer-version \
    --layer-name brutalismbot \
    --description 'Brutalismbot v#{VERSION}' \
    --content S3Bucket=#{S3_BUCKET},S3Key=#{S3_PREFIX}layer.zip \
    --compatible-runtimes ruby2.5
  EOS
end
