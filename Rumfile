#!/usr/bin/env ruby
require "dotenv/load"
require "brutalismbot/version"

RUBY      = RUBY_VERSION[/\d+\.\d+/]
VERSION   = ENV["BRUTALISMBOT_VERSION"] || %x(git describe --tags --always).strip
S3_BUCKET = "brutalismbot"
S3_PREFIX = "pkg/brutalismbot-#{VERSION}/"

rum :"brutalismbot/brutalismbot" do
  tag VERSION

  env :AWS_ACCESS_KEY_ID
  env :AWS_DEFAULT_REGION
  env :AWS_SECRET_ACCESS_KEY
  env :RUBY                               => RUBY
  env :TF_VAR_RELEASE                     => VERSION
  env :TF_VAR_TWITTER_ACCESS_TOKEN        => ENV["TWITTER_ACCESS_TOKEN"]
  env :TF_VAR_TWITTER_ACCESS_TOKEN_SECRET => ENV["TWITTER_ACCESS_TOKEN_SECRET"]
  env :TF_VAR_TWITTER_CONSUMER_KEY        => ENV["TWITTER_CONSUMER_KEY"]
  env :TF_VAR_TWITTER_CONSUMER_SECRET     => ENV["TWITTER_CONSUMER_SECRET"]

  stage :build
  stage :dev  => :build
  stage :test => :dev
  stage :plan => :test

  artifact "pkg/function.zip" => :build
  artifact "pkg/layer.zip"    => :build

  desc "Apply infrastructure"
  run :apply => :plan

  default %W[pkg/function.zip pkg/layer.zip]
end

desc "List packages"
task :ls do
  sh "aws s3 ls --human-readable --recursive s3://#{S3_BUCKET}/pkg/"
end

namespace :push do
  desc "Push Lambda package"
  task :lambda => "pkg/function.zip" do
    sh "aws s3 cp pkg/function.zip s3://#{S3_BUCKET}/#{S3_PREFIX}"
  end

  desc "Push Lambda package"
  task :layer => "pkg/layer.zip" do
    sh "aws s3 cp pkg/layer.zip s3://#{S3_BUCKET}/#{S3_PREFIX}"
  end
end

desc "Push Lambda + Layer packages"
task :push => %i[push:lambda push:layer]

desc "Publish Lambda Layer package"
task :publish do
  sh <<~EOS
    aws lambda publish-layer-version \\
    --layer-name brutalismbot \\
    --description 'Brutalismbot v#{VERSION}' \\
    --content S3Bucket=#{S3_BUCKET},S3Key=#{S3_PREFIX}layer.zip \\
    --compatible-runtimes ruby#{RUBY}
  EOS
end
